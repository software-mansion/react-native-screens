name: npm package build
env:
  YARN_ENABLE_HARDENED_MODE: 0
on:
  workflow_call:
    inputs:
      option:
        required: false
        type: string
      ref:
        required: false
        type: string
      publish_on_npm:
        required: false
        type: boolean
    secrets:
      NODE_AUTH_TOKEN:
        required: false
  workflow_dispatch:
    inputs:
      option:
        required: false
        type: string
        description: Release mode. Can be either --nightly (-n) or --fresh (-f)
      ref:
        required: false
        type: string
        description: Git reference being used in `actions/checkout` step.

jobs:
  npm-reanimated-build:
    if: github.repository == 'software-mansion/react-native-screens'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      PACKAGE_NAME: PLACEHOLDER # Will be reassigned later on.
      TAG: PLACEHOLDER # Will be reassigned later on.
      SCREENS_VERSION: PLACEHOLDER # Will be reassigned later on.
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
          registry-url: https://registry.npmjs.org/

      - name: Clear annotations
        run: .github/workflows/helper/clear-annotations.sh

      - name: Determine release tag
        if: ${{ inputs.publish_on_npm }}
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "SCREENS_VERSION=$VERSION" >> $GITHUB_ENV
          if [[ $VERSION == 3.* ]]; then
            echo "TAG=screens3-nightly" >> $GITHUB_ENV
          elif [[ $VERSION == 4.* ]]; then
            echo "TAG=nightly" >> $GITHUB_ENV
          else
            echo "There's no nightly release tag for version: $VERSION"
            exit 1
          fi
      - name: Assert TAG
        if: ${{ inputs.publish_on_npm && env.TAG == 'PLACEHOLDER' }}
        run: exit 1 # This should never happen.

      - name: Install node dependencies
        run: yarn install --immutable

      - name: Bump version for Screens 3 nightly release
        if: ${{ inputs.publish_on_npm && env.TAG == 'screens3-nightly' }}
        run: |
          VERSION=${{ env.SCREENS_VERSION }}
          MAJOR=$(echo $VERSION | awk -F. '{print $1}')
          MINOR=$(echo $VERSION | awk -F. '{print $2}')
          NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
          node ./scripts/set-screens-version.js $NEW_VERSION

      - name: Build package
        id: build
        run: >-
          ./createNPMPackage.sh ${{ inputs.option }}

      - name: Check if any node_modules were packed
        id: node_modules
        run: >-
          ! grep --silent -E "node_modules/.+" build.log

      - name: Show build log
        if: failure() && steps.build.outcome == 'failure'
        run: >-
          cat build.log

      - name: Show packed node_modules
        if: failure() && steps.node_modules.outcome == 'failure'
        run: >-
          ! grep -E "node_modules/.+" build.log

      - name: Add package name to env
        run: echo "PACKAGE_NAME=$(ls -l | egrep -o "react-native-screens-(.*)(=?\.tgz)")" >> $GITHUB_ENV

      - name: Assert PACKAGE_NAME
        if: ${{ env.PACKAGE_NAME == 'PLACEHOLDER' }}
        run: exit 1 # This should never happen.

      - name: Upload npm package to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: './${{ env.PACKAGE_NAME }}'

      - name: Publish npm package
        run: npm publish $PACKAGE_NAME --tag ${{env.TAG}} --provenance
        if: ${{ inputs.publish_on_npm }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
