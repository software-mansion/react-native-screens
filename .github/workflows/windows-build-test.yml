name: Test Windows build

on:
  pull_request:
    branches:
      - main
    paths:
      - 'windows/**'
      - '.github/workflows/windows-build-test.yml'

  push:
    branches:
      - main
    paths:
      - 'windows/**'
      - '.github/workflows/windows-build-test.yml'

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 60
    concurrency:
      group: windows-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create directory for app
        run: |
          mkdir WindowsExample

      - name: Setup Node.js (version from .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          cache-dependency-path: |
            yarn.lock
            WindowsExample/yarn.lock

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Install library dependencies
        run: yarn

      - name: Prepare library
        run: yarn prepare

      - name: Pack library
        run: npm pack

      - name: Unpack library files
        run: tar -xzf (Get-ChildItem -Path .\*.tgz)

      - name: Determine latest react-native version supported by react-native-windows
        id: determine-rn-version
        run: |
          $rnwVersion = npm view react-native-windows version
          if ($rnwVersion -match '(\d+)\.(\d+)\.') {
              $major = $matches[1]
              $minor = $matches[2]
              $desiredVersion = "$major.$minor"
              echo "Installing $desiredVersion version."
              echo "rn=$desiredVersion" >> $env:GITHUB_OUTPUT
          } else {
              echo "Failed to parse version from npm. Installing latest version."
              echo "rn=latest" >> $env:GITHUB_OUTPUT
          }

      - name: Create Example app
        run: npx @react-native-community/cli@latest init WindowsExample --version ${{ steps.determine-rn-version.outputs.rn }}

      - name: Install app dependencies
        working-directory: WindowsExample
        run: |
          New-Item yarn.lock
          yarn add react-native-windows react-native-screens
      
      - name: Init example app
        working-directory: WindowsExample
        run: npx react-native init-windows --overwrite

      - name: Replace react-native-screens files
        run: |
          Remove-Item -Path ".\WindowsExample\node_modules\react-native-screens\*" -Recurse -Force
          Copy-Item -Path ".\package\*" -Destination ".\WindowsExample\node_modules\react-native-screens"

      - name: Build app
        working-directory: WindowsExample/windows
        run: npx react-native run-windows --logging --no-packager --no-deploy --no-autolink
