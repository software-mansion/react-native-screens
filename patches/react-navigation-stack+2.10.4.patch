diff --git a/node_modules/react-navigation-stack/src/vendor/types.tsx b/node_modules/react-navigation-stack/src/vendor/types.tsx
index 977e7d4..50cdd8e 100644
--- a/node_modules/react-navigation-stack/src/vendor/types.tsx
+++ b/node_modules/react-navigation-stack/src/vendor/types.tsx
@@ -104,17 +104,17 @@ export type Scene<T> = {
     /**
      * Progress value of the current screen.
      */
-    current: Animated.AnimatedInterpolation;
+    current: Animated.AnimatedInterpolation<number>;
     /**
      * Progress value for the screen after this one in the stack.
      * This can be `undefined` in case the screen animating is the last one.
      */
-    next?: Animated.AnimatedInterpolation;
+    next?: Animated.AnimatedInterpolation<number>;
     /**
      * Progress value for the screen before this one in the stack.
      * This can be `undefined` in case the screen animating is the first one.
      */
-    previous?: Animated.AnimatedInterpolation;
+    previous?: Animated.AnimatedInterpolation<number>;
   };
 };
 
@@ -509,7 +509,7 @@ export type StackCardInterpolationProps = {
     /**
      * Animated node representing the progress value of the current screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: Animated.AnimatedInterpolation<number>;
   };
   /**
    * Values for the current screen the screen after this one in the stack.
@@ -519,7 +519,7 @@ export type StackCardInterpolationProps = {
     /**
      * Animated node representing the progress value of the next screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: Animated.AnimatedInterpolation<number>;
   };
   /**
    * The index of the card in the stack.
@@ -528,15 +528,15 @@ export type StackCardInterpolationProps = {
   /**
    * Animated node representing whether the card is closing (1 - closing, 0 - not closing).
    */
-  closing: Animated.AnimatedInterpolation;
+  closing: Animated.AnimatedInterpolation<number>;
   /**
    * Animated node representing whether the card is being swiped (1 - swiping, 0 - not swiping).
    */
-  swiping: Animated.AnimatedInterpolation;
+  swiping: Animated.AnimatedInterpolation<number>;
   /**
    * Animated node representing multiplier when direction is inverted (-1 - inverted, 1 - normal).
    */
-  inverted: Animated.AnimatedInterpolation;
+  inverted: Animated.AnimatedInterpolation<number>;
   /**
    * Layout measurements for various items we use for animation.
    */
@@ -588,7 +588,7 @@ export type StackHeaderInterpolationProps = {
     /**
      * Animated node representing the progress value of the current screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: Animated.AnimatedInterpolation<number>;
   };
   /**
    * Values for the current screen the screen after this one in the stack.
@@ -598,7 +598,7 @@ export type StackHeaderInterpolationProps = {
     /**
      * Animated node representing the progress value of the next screen.
      */
-    progress: Animated.AnimatedInterpolation;
+    progress: Animated.AnimatedInterpolation<number>;
   };
   /**
    * Layout measurements for various items we use for animation.
